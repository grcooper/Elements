<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//declare instance variables
eSpeed = 0;
eHealth = 1;
points = 0;
boss = false;
eFire = false;
eStartReload = 20;
eReload = eStartReload;
//Depending on the type of bullet to come in contact with the enemy, a special action occurs
mPower = "";
mBurnTimer = 1;
mCurInst = instance_nearest(x,y, missile_obj);

//change stats depending on spawn type
if (spawnType = "spider")
{
    sprite_index = spider_spr;
    eHealth = round(1 + (curLevel/5));
    eSpeed = 5;
    points = 10 + (curLevel * 2);
    eFire = false;
}
else if (spawnType = "wizard")
{
    sprite_index = wizard_spr;
    eHealth = round(2 + (curLevel/5));
    eSpeed = 3;
    points = 15 + (curLevel * 2);
    eFire = false;
}
else if (spawnType = "bat")
{
    sprite_index = bat_spr;
    eHealth = 1;
    eSpeed = 5;
    points = 15 + (curLevel * 2);
    eFire = true;
}
else if (spawnType = "boss")
{
    sprite_index = boss_spr;
    eHealth = round(5 + (curLevel/5));
    points = 30 + (curLevel * 15);
    eSpeed = 3;
    boss = true;
    eFire = true;
}
else
{
    //base case incase something broken, just destroys the creature instantly
    instance_destroy();
}

//Melee for when the enemies hit the wall
eMeleeReloadStart = 30;
eMeleeReload = eMeleeReloadStart;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Destroy when the health is less than 1
if (eHealth &lt; 1)
{
    score += points;
    eDead += 1;
    //Spawn boss if all the required enemies are destroyed
    if(boss == true)
    {
        winCond = true;
    }
    instance_destroy();
}

//Stop the enemies at the wall and damage the wall
if (instance_position(x, y + 16, wall_obj))
{
    vspeed = 0;
    eFire = false;
    eMeleeReload --;
    if (eMeleeReload = 0)
    {
        wallHealth -= 10;
        eMeleeReload = eMeleeReloadStart;
    } 
}
else if (!paused)
{
    vspeed = eSpeed;
}
else
{
    vspeed = 0;
}

//Allow for firing missiles if the enemy has that ability
if (eFire)
{
    if(eReload &lt;= 0)
    {
        instance_create(x,y,monsterMissile_obj);
        eReload = eStartReload;
    }
    else
    {
        eReload--;
    }   
}

////////////////////////////////////
//Special Actions
///////////////////////////////////

//Set on fire, damage over time
if (mPower == "burn")
{
    sprite_index = onFire_spr;
    if((mBurnTimer % 30) == 0)
    {
        eHealth -= 1;
    }
    if (mBurnTimer &lt;= 60)
    {
        mBurnTimer += 1;
    }
    else
    {
        mPower = "";
    }
}
//Create two more short range missiles on impact
else if (mPower == "splash")
{
    var xSpawn;
    if(boss == true)
    {
        xSpawn = 36;
    }
    else
    {
        xSpawn = 20;
    }
    splashLeft = true;
    instance_create(x - xSpawn,y,splash_obj);
    splashLeft = false;
    instance_create(x + xSpawn, y, splash_obj);
    mPower = "";
}
//Move backward on impact
else if (mPower = "push")
{
    y -= 10;
    mPower = "";   
}

//Destroy on game over so no enemies damage the wall etc.
if(gameOver)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="missile_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//remove health from the enemy only if it has not happened before
if (instance_nearest(x,y, missile_obj) != mCurInst)
{
    eHealth -= other.mDamage;   
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
